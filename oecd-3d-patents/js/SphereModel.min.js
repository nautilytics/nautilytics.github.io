function DataSphere(a, b, c, d, e, f, g) { this.name = 5 == arguments.length ? "" : f.name; var h = flags[g] ? flags[g] : defaultFlag, i = new THREE.MeshLambertMaterial({ transparent: !0, opacity: .5, map: THREE.ImageUtils.loadTexture(h) }), j = TWEEN.Easing.Cubic.InOut, k = new THREE.Mesh(new THREE.SphereGeometry(1, 10, 10), i); this.id = k.id, this.sphere = k, this.countryid = g, this.angle = 0, k.overdraw = !0, a.add(k), k.position.y = c, k.position.x = b, k.position.z = d, this.Destroy = function () { a.remove(k) }, this.MoveTo = function (a, b, c) { var d = { x: a, y: b, z: c }, e = new TWEEN.Tween(k.position).to(d, 700); e.easing(j), e.start() }, this.ScaleTo = function (a) { var b = { x: a, y: a, z: a }, c = new TWEEN.Tween(k.scale).to(b, 700); c.easing(j), c.start() }, this.FadeTo = function (a) { var b = { opacity: i.opacity }, c = { opacity: a }, d = new TWEEN.Tween(b).to(c, 700); d.easing(j), d.start(), d.onUpdate(function () { i.opacity = b.opacity }) }, this.SetAngle = function (a) { this.angle = a } } function Link(a, b, c) { var d = new THREE.MeshLambertMaterial({ color: "red", transparent: !0, opacity: 1 }), e = new THREE.SplineCurve3([b.sphere.position, c.sphere.position]); new THREE.SplineCurve3([b.sphere.position, b.sphere.position]); var g = new THREE.TubeGeometry(e, 0, 5, 3, !1), h = new THREE.Mesh(g, d); a.add(h) } var NAUTILYTICS = NAUTILYTICS || {}, flags = {}, whiteMaterial = new THREE.MeshLambertMaterial({ color: "rgb(50,50,50)" }), ringMat = new THREE.MeshLambertMaterial({ color: "rgb(0,255,255)", transparent: !0, opacity: .2, blending: THREE.NormalBlending }), defaultFlag = "https://nautilytics.blob.core.windows.net/us-flags/noflag.gif"; $(window).load(function () { $(".statusBox").delay(1200).fadeOut(), $("#preloader").delay(350).fadeOut("slow") }), NAUTILYTICS.SphereModel = new function () { function Cb() { f = new THREE.OrbitControls(a), f.minDistance = 1e3, f.maxDistance = 3e3, f.minPolarAngle = .1, f.maxPolarAngle = Math.PI / 2 - .2, f.distance = 1500 } function Db() { } function Eb() { var a = new THREE.DirectionalLight(16777215); a.position.x = 0, a.position.y = 800, a.position.z = 0, a.lookAt([0, 0, 0]), a.castShadow = !0, b.add(a); var c = new THREE.AmbientLight(3355443); b.add(c) } function Fb(a, b) { return +a.value[I] > +b.value[I] ? -1 : +a.value[I] < +b.value[I] ? 1 : 0 } function Gb() { function a(a, c, d, e) { D = c, fb = d, E = d3.keys(D), B = d3.min(E), C = d3.max(E), A = C, d3.select(".current-year").text(A); var g = d3.merge(E.map(function (a) { var b = d3.merge(d3.values(D[a]).map(function (a) { return d3.keys(a) })); return $.grep(b, function (a, c) { return $.inArray(a, b) === c }) })); g = $.grep(g, function (a, b) { return $.inArray(a, g) === b }), gb = g, F = d3.merge(E.map(function (a) { return d3.keys(D[a]) })), F = $.grep(F, function (a, b) { return $.inArray(a, F) === b }), H = F[0], d3.selectAll(".element-name").text(y[H]), d3.select(".changeElement").select("select").on("change", Mb).selectAll("option").data(F).enter().append("option").attr("value", function (a) { return a }).text(function (a) { return y[a] }), $(".changeElement option[value=" + H + "]").attr("selected", !0); var i = ["0", "1"]; I = i[0], d3.selectAll(".item-name").text(z[I]), d3.select(".changeItem").select("select").on("change", Nb).selectAll("option").data(i).enter().append("option").attr("value", function (a) { return a }).text(function (a) { return z[a] }), $(".changeItem option[value=" + I + "]").attr("selected", !0), e.forEach(function (a) { flags[a.id] = "https://nautilytics.blob.core.windows.net/us-flags/" + a.file_name + ".gif" }), Hb(!0), g.forEach(function (a) { var c = new DataSphere(b, 0, 0, 0, 10, db[a], a); n.push(c), h[a] = c }), Kb(), U = d3.select("#bar-comparison svg").append("g").attr("transform", "translate(0, " + T + ")"); var j = $("#spark-container"); J = j.width(), K = j.height(), M.domain([0, E.length]).range([0, J - L.width]), N.range([K - L.height, 0 + L.height]), O = d3.select("#spark-container").append("svg").attr("class", "spark"), Q = O.selectAll("circle").data([0]).enter().insert("svg:circle").style("visibility", "hidden").attr("cx", M(0)).attr("cy", N(0)).attr("r", 5), P = d3.svg.line().defined(function (a) { return null != a }).x(function (a, b) { return M(b) }).y(function (a) { return N(a) }), $("#countryDropDown").autocomplete({ source: d3.values(db), autofocus: !0, minlength: 1, select: function (a, b) { var c = eb[b.item.value]; Ib(c) }, messages: { noResults: "", results: function () { } }, open: function () { kb = !0, f.setSearching(!0) }, close: function () { kb = !1, f.setSearching(!1) } }).focus(setTimeout(function () { $("#countryDropDown").select() }, 50)), ac() } queue().defer(d3.json, "data/oecd_patent_data_11.7.13.json").defer(d3.csv, "data/country_lookups.csv").defer(d3.csv, "data/high_res_flag_lookups.csv").await(a) } function Hb(a) { fb.forEach(function (b) { a ? $.inArray(b.id, gb) > -1 && (db[b.id] = b.name, eb[b.name] = b.id) : (db[b.id] = b.name, eb[b.name] = b.id) }) } function Ib(a) { var b = n.filter(function (b) { return b.countryid == a })[0]; Tb(b), lb && Vb(lb), Ub(b.sphere) } function Jb() { O.style("visibility", "visible"), Q.style("visibility", "visible"), O.selectAll("path").remove(); var a = E.map(function (a) { var b = D[a][H][ob]; return b ? b[I] : null }); N.domain(d3.extent(a)); var b = E.indexOf(String(A)); O.append("path").datum(a).attr("d", P), O.selectAll("circle").data([a[b]]).attr("cx", M(b)).attr("cy", function (a) { return N(a ? a : N.domain()[0]) }) } function Kb() { ib = D[A][H], Wb(), hb = d3.entries(ib).filter(function (a) { return a.value[I] }).sort(Fb).map(function (a) { return a.key }), d3.select("#number-countries").text(hb.length); var a = d3.set(hb); n.forEach(function (b) { var c = 1; a.has(b.countryid) || (c = 0, b.MoveTo(0, 0, 0)), b.FadeTo(c) }); var b = d3.extent(d3.values(ib).map(function (a) { return +a[I] })); o.domain(b), jb = {}, hb.forEach(function (a) { var b = 0; if (A != B) { var c = D[A - 1][H][a], d = 0; c && (d = c[I]); var e = ib[a][I]; d && e && (b = (e - d) / d) } jb[a] = b }), p.domain(d3.extent(d3.values(jb))); var c = d3.sum(d3.values(ib).map(function (a) { return o(+a[I]) })); 360 / hb.length; var e = 0, f = 0; hb.forEach(function (a) { var b = 750, d = p(jb[a]), g = o(ib[a][I]), i = e; e += 360 * (g / c), f = (e + i) / 2; var j = Lb({ x: 0, y: 0 }, b, f, d), k = h[a]; k.MoveTo(j.x, j.y, j.z), k.ScaleTo(g), k.SetAngle(f) }), ac(), _b(), s.position.set(0, p(0), 0) } function Lb(a, b, c, d) { var e = Math.PI / 180 * c, f = a.x + b * Math.cos(e), g = a.y + b * Math.sin(e); return { x: f, y: d, z: g } } function Mb() { H = +this.value, A = d3.max(E), d3.select(".current-year").text(A), d3.selectAll(".element-name").text(y[H]), Kb() } function Nb() { I = +this.value, d3.selectAll(".item-name").text(z[I]), Kb() } function Ob() { A--, B > A && (A = C), d3.select(".current-year").text(A), Kb() } function Pb() { A++, A > C && (A = B), d3.select(".current-year").text(A), Kb() } function Qb() { var f = !1; try { c = new THREE.WebGLRenderer, c.sortObjects = !1, a = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, ub, vb), b = new THREE.Scene, d = document.createElement("canvas"), d.width = yb, d.height = zb, e = d.getContext("2d"), e.fillStyle = "#FFFFFF", e.beginPath(), e.fillRect(0, 0, yb, zb), e.closePath(), e.fill(), a.position.y = 2200, c.setSize(i, j), g.append(c.domElement), c.shadowMapEnabled = !0, c.shadowMapSoft = !0, c.shadowCameraNear = 3, c.shadowCameraFar = a.far, c.shadowCameraFov = 50, c.shadowMapBias = .0039, c.shadowMapDarkness = .5, c.shadowMapWidth = 1024, c.shadowMapHeight = 1024, f = !0 } catch (h) { f = !1 } return f } function Rb() { $(window).resize(callbacks.windowResize), $(window).keydown(callbacks.keyDown), $(document.body).mousemove(callbacks.mouseMove, !1), $(document.body).mousedown(callbacks.mouseDown), $(document.body).mouseup(callbacks.mouseUp), $(document.body).click(callbacks.mouseClick); var a = g[0]; a.addEventListener("dragover", Db, !1), a.addEventListener("dragenter", Db, !1), a.addEventListener("dragexit", Db, !1) } function Sb() { if (!kb) { var c = new THREE.Vector3(mb.x, mb.y, 1); t.unprojectVector(c, a), v.set(a.position, c.sub(a.position).normalize()); var d = v.intersectObjects(b.children); if (d.length > 0) { if (nb != d[0].object) { nb && nb.material.emissive.setHex(qb), nb = d[0].object; var e = n.filter(function (a) { return a.id == nb.id })[0]; if (e) { var f = e.countryid; ob != f && (lb && Vb(lb), Ub(nb), Tb(e)) } } bc && new THREE.Vector3(0, 0, 0) } else nb && nb.material.emissive.setHex(qb), nb = null, $("#name").text(""); bc = !1 } } function Tb(a) { var b = a.countryid; Wb(), $("#name").text(a.name), ob = b, document.getElementById("flag1").src = flags[b] ? flags[b] : defaultFlag, d3.selectAll(".country-name").text(db[b]), d3.select("#percent-change").text((100 * jb[b]).toFixed(2) + "%"), ib[b] && d3.select("#patent-applications").text(G(ib[b][I])); var c = hb.indexOf(b); d3.select("#country-ranking").text(c + 1), Yb(c), Xb(), Jb() } function Ub(a) { lb = a, lb.material.emissive.setHex(pb) } function Vb(a) { a.material.emissive.setHex(qb) } function Wb() { document.getElementById("flag1").src = defaultFlag, d3.selectAll(".country-name").text(""), d3.select("#percent-change").text(""), d3.select("#patent-applications").text(""), d3.select("#country-ranking").text(""), O && (O.selectAll("path").remove(), Q.style("visibility", "hidden")), d3.selectAll(".bars rect").remove(), d3.selectAll(".bars text").remove(), d3.selectAll(".bars").remove(), d3.selectAll(".axis").remove(), d3.selectAll(".pie-chart").remove(), d3.selectAll(".legend li").remove() } function Xb() { var a = 0, b = []; if (d3.keys(D[A]).forEach(function (c) { var d = 0, e = y[c], f = D[A][c], g = f[ob]; if (g && (d = g[I] ? g[I] : 0, d > 0)) { a += d; var h = "<li><i style='background-color:" + _[c] + ";'></i>" + e + "</li>"; $(".legend").append(h), b.push({ label: e, value: d, id: c }) } }), b.length > 0) { var c = d3.select(".pieChart .chart").append("svg").data([b]).attr("class", "pie-chart").append("g").attr("transform", "translate(" + 1.1 * Y + "," + 1.1 * Y + ")"), d = c.append("text").attr("dy", ".35em").style("text-anchor", "middle").attr("class", "textTop").text("TOTAL").attr("y", -10), e = c.append("text").attr("dy", ".35em").style("text-anchor", "middle").attr("class", "textBottom").text(G(a)).attr("y", 10), f = c.selectAll("g.slice").data(cb).enter().append("g").attr("class", "slice").on("mouseover", function () { d3.select(this).select("path").transition().duration(200).attr("d", bb), d.text(d3.select(this).datum().data.label), e.text(G(d3.select(this).datum().data.value)) }).on("mouseout", function () { d3.select(this).select("path").transition().duration(100).attr("d", ab), d.text("TOTAL"), e.text(G(a)) }); f.append("path").attr("fill", function (a) { return _[+a.data.id] }).attr("d", ab) } } function Yb(a) { var b, c = hb.length; b = a > c - 3 ? d3.range(c - 5, c).map(function (a) { var b = hb[a]; return { name: db[b], value: ib[b][I], id: b } }) : 2 > a ? d3.range(0, 5).map(function (a) { var b = hb[a]; return { name: db[b], value: ib[b][I], id: b } }) : d3.range(a - 2, a + 3).map(function (a) { var b = hb[a]; return { name: db[b], value: ib[b][I], id: b } }), W.domain([0, d3.max(b.map(function (a) { return +a.value }))]), V = (S - T) / b.length; var d = U.append("g").attr("class", "bars").selectAll("rect").data(b).enter().append("g").attr("transform", function (a, b) { return "translate(0," + b * V + ")" }); d.append("rect").attr("height", V - 1).attr("width", function (a) { return W(+a.value) }).style("fill", function (a) { return a.id == ob ? "red" : "steelblue" }), d.append("text").attr("x", function () { return R - T }).attr("y", V / 2).attr("dy", ".35em").text(function (a) { return a.name }), U.append("g").attr("class", "axis").call(X).select(".tick line").style("stroke", "#000") } function Zb() { requestAnimationFrame($b), Sb(), f.update(), n.forEach(function (b) { b.sphere.lookAt(a.position) }) } function $b() { $("#dropdowns").mouseenter(function () { f.enabled = !1 }).mouseleave(function () { f.enabled = !0 }), c && c.render(b, a), x && (Zb(), TWEEN.update()) } function _b() { a && (i = g.width(), j = g.height(), a.aspect = i / j, c.setSize(i, j), a.updateProjectionMatrix()) } function ac() { var a = d3.format(",.1%"), b = d3.format(",.2f"); $("#radiusHigh").text(b(o.domain()[1])), $("#radiusMedium").text(b((o.domain()[1] - o.domain()[0]) / 2)), $("#radiusLow").text(b(o.domain()[0])), $("#heightHigh").text(a(p.domain()[1])), $("#heightLow").text(a(p.domain()[0])) } var a, b, f, q, r, s, A, B, C, E, F, H, I, J, K, O, P, Q, U, V, jb, lb, nb, ob, c = null, d = null, e = null, g = $("#container"), h = {}, i = g.width(), j = g.height(), n = ($("#gui"), []), o = d3.scale.linear().range([25, 200]), p = d3.scale.linear().range([200, 800]), t = new THREE.Projector, v = (new THREE.Vector3, new THREE.Raycaster), x = !0, y = { 0: "Biotechnology", 1: "Energy generation from renewable and non-fossil sources", 2: "Renewable energy generation", 3: "Energy generation from fuels of non-fossil origin", 4: "Nanotechnology" }, z = { 0: "Priority date", 1: "Application date" }, D = {}, G = d3.format(",.2f"), L = { width: 5, height: 5 }, M = d3.scale.linear(), N = d3.scale.linear(), R = $("#bar-comparison svg").width(), S = $("#bar-comparison svg").height(), T = 10, W = d3.scale.linear().range([0, R - T]), X = d3.svg.axis().scale(W).ticks(4).orient("top").tickSize(-j), Y = Math.min(R, S) / 2.5, Z = 43, _ = colorbrewer.Set1[5], ab = d3.svg.arc().outerRadius(Y).innerRadius(Z), bb = d3.svg.arc().outerRadius(Y + 7).innerRadius(Z + 7), cb = d3.layout.pie().value(function (a) { return a.value }), db = {}, eb = {}, fb = [], gb = {}, hb = [], ib = {}, kb = !1, mb = new THREE.Vector2, pb = 16711680, qb = 0, ub = 1, vb = 1e4, yb = 400, zb = 400; this.pause = function () { x = !1 }, this.play = function () { x || (x = !0, Zb()) }, this.init = function () { if (document.onselectstart = function () { return !1 }, Rb(), Qb()) { Eb(); var a = new THREE.JSONLoader, c = 11; a.load("js/ring.js", function (a) { q = new THREE.Mesh(a, ringMat), s = new THREE.Mesh(a, ringMat), r = new THREE.Mesh(a, ringMat), q.scale.set(c, c, c), q.position.set(0, p.range()[1], 0), r.scale.set(c, c, c), r.position.set(0, p.range()[0], 0), s.scale.set(c, c, c), b.add(q), b.add(s), b.add(r), Gb(), Cb(), Zb() }) } else $("html").removeClass("webgl").addClass("no-webgl") }, $("#year-left").click(function () { Ob() }), $("#year-right").click(function () { Pb() }); var bc = !1; callbacks = { mouseMove: function (a) { mb.x = 2 * ((a.clientX - $("#menu").width()) / g.width()) - 1, mb.y = 2 * -((a.clientY - $("#dropdowns").height()) / window.innerHeight) + 1 }, mouseClick: function () { bc = !0, Sb() }, mouseDown: function () { bc = !1 }, mouseUp: function () { }, windowResize: function () { _b() }, keyDown: function (b) { if (!kb && a) switch (b.keyCode) { case 37: break; case 39: } } } }, $(document).ready(function () { NAUTILYTICS.SphereModel.init() });